// Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

using System;
using Microsoft.CodeAnalysis;

namespace Roslynator.Options
{
    public static partial class AnalyzerOptionDescriptors
    {
        /// <summary>Roslynator.ParenthesizeSimpleConditionOfConditionalExpression</summary>
        public static readonly DiagnosticDescriptor ParenthesizeSimpleConditionOfConditionalExpression = Factory.Create(
            id:                 AnalyzerOptionIdentifiers.ParenthesizeSimpleConditionOfConditionalExpression, 
            title:              "Parenthesize simple condition of conditional expression", 
            messageFormat:      "Parenthesize simple condition of conditional expression", 
            category:           DiagnosticCategories.AnalyzerOption, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        AnalyzerOptionIdentifiers.ParenthesizeSimpleConditionOfConditionalExpression, 
            customTags:         Array.Empty<string>());

        /// <summary>Roslynator.UseElementAccessOnElementAccess</summary>
        public static readonly DiagnosticDescriptor UseElementAccessOnElementAccess = Factory.Create(
            id:                 AnalyzerOptionIdentifiers.UseElementAccessOnElementAccess, 
            title:              "Use element access on element access", 
            messageFormat:      "Use element access on element access", 
            category:           DiagnosticCategories.AnalyzerOption, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        AnalyzerOptionIdentifiers.UseElementAccessOnElementAccess, 
            customTags:         Array.Empty<string>());

        /// <summary>Roslynator.UseElementAccessOnInvocation</summary>
        public static readonly DiagnosticDescriptor UseElementAccessOnInvocation = Factory.Create(
            id:                 AnalyzerOptionIdentifiers.UseElementAccessOnInvocation, 
            title:              "Use element access on invocation", 
            messageFormat:      "Use element access on invocation", 
            category:           DiagnosticCategories.AnalyzerOption, 
            defaultSeverity:    DiagnosticSeverity.Info, 
            isEnabledByDefault: true, 
            description:        null, 
            helpLinkUri:        AnalyzerOptionIdentifiers.UseElementAccessOnInvocation, 
            customTags:         Array.Empty<string>());

    }
}